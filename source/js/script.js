/**
 * Cybersecurity Learning Platform
 * Enhanced with modular structure, accessibility, and fixed navigation menu
 */

/** Data Module */
const Data = {
    course: {
        title: "Основы интернет-безопасности",
        totalLessons: 5,
        lessons: [
            {
                id: 1,
                title: "Основы защиты от фишинга",
                description: "Узнайте, как распознать и защититься от фишинговых атак.",
                status: "not-started",
                content: `
                    <h2>Основы защиты от фишинга</h2>
                    <p>Фишинг — это кибератака, направленная на кражу личных данных, таких как пароли и данные банковских карт.</p>
                    <h3>Как работает фишинг</h3>
                    <ul>
                        <li>Поддельные сайты, имитирующие легитимные сервисы.</li>
                        <li>Сообщения с призывами к срочным действиям.</li>
                        <li>Психологическое давление через угрозы.</li>
                        <li>Использование техник социальной инженерии.</li>
                        <li>Массовые рассылки с целью поймать доверчивых пользователей.</li>
                    </ul>
                    <h3>Признаки фишинга</h3>
                    <ul>
                        <li><strong>Подозрительный URL</strong>: Например, g00gle.com, аmazon-secure.net.</li>
                        <li><strong>Ошибки в тексте</strong>: Орфография и грамматика.</li>
                        <li><strong>Запросы данных</strong>: Пароли по email.</li>
                        <li><strong>Срочность</strong>: "Аккаунт заблокируют!".</li>
                        <li><strong>Нестандартные отправители</strong>: Email не соответствует официальному домену.</li>
                        <li><strong>Неперсонализированные обращения</strong>: "Уважаемый клиент" вместо вашего имени.</li>
                    </ul>
                    <h3>Защита от фишинга</h3>
                    <ol>
                        <li>Проверяйте URL перед вводом данных.</li>
                        <li>Используйте официальные приложения.</li>
                        <li>Включите двухфакторную аутентификацию (2FA).</li>
                        <li>Избегайте подозрительных ссылок.</li>
                        <li>Обновляйте ПО и антивирус.</li>
                        <li>Используйте менеджеры паролей с функцией проверки подлинности сайтов.</li>
                        <li>Не открывайте вложения из подозрительных источников.</li>
                        <li>Проверяйте наличие SSL-сертификата (https://).</li>
                    </ol>
                    <h3>Если вы стали жертвой</h3>
                    <ul>
                        <li>Смените пароли.</li>
                        <li>Свяжитесь с банком.</li>
                        <li>Проверьте устройство на вирусы.</li>
                        <li>Сообщите о фишинге.</li>
                        <li>Мониторьте свои счета на предмет подозрительной активности.</li>
                        <li>Подключите уведомления о входе в аккаунты.</li>
                        <li>Обратитесь в службу поддержки затронутых сервисов.</li>
                    </ul>
                    <h3>Распространенные типы фишинга</h3>
                    <ul>
                        <li><strong>Spear Phishing</strong>: Целенаправленные атаки на конкретных людей.</li>
                        <li><strong>Whaling</strong>: Атаки на руководителей компаний.</li>
                        <li><strong>Smishing</strong>: Фишинг через SMS.</li>
                        <li><strong>Vishing</strong>: Фишинг через телефонные звонки.</li>
                    </ul>
                `,
                quiz: [
                    {
                        question: "Что такое фишинг?",
                        options: [
                            "Метод рыбной ловли",
                            "Кибератака для кражи данных",
                            "Технология защиты",
                            "Ускорение интернета"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что НЕ является признаком фишинга?",
                        options: [
                            "Грамматические ошибки",
                            "Официальное обращение",
                            "Срочные угрозы",
                            "Запрос данных"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что делать при фишинге?",
                        options: [
                            "Ничего",
                            "Выключить ПК",
                            "Сменить пароли, связаться с банком",
                            "Установить антивирус"
                        ],
                        correctAnswer: 2
                    },
                    {
                        question: "Какой тип фишинга направлен на руководителей компаний?",
                        options: [
                            "Spear Phishing",
                            "Whaling",
                            "Smishing",
                            "Vishing"
                        ],
                        correctAnswer: 2
                    },
                    {
                        question: "Что указывает на безопасность сайта?",
                        options: [
                            "Красивый дизайн",
                            "Запрос личных данных",
                            "Наличие SSL-сертификата (https://)",
                            "Большое количество рекламы"
                        ],
                        correctAnswer: 2
                    }
                ]
            },
            {
                id: 2,
                title: "Создание надежных паролей",
                description: "Научитесь создавать и управлять безопасными паролями для защиты ваших аккаунтов.",
                status: "not-started",
                content: `
                    <h2>Создание надежных паролей</h2>
                    <p>Надежный пароль — первая линия защиты ваших цифровых данных. В этом уроке вы узнаете, как создавать по-настоящему безопасные пароли.</p>
                    
                    <h3>Почему это важно</h3>
                    <ul>
                        <li>80% взломов происходят из-за слабых паролей</li>
                        <li>Большинство людей используют одинаковые пароли для разных сервисов</li>
                        <li>Современные компьютеры могут взломать простой пароль за секунды</li>
                    </ul>
                    
                    <h3>Характеристики надежного пароля</h3>
                    <ul>
                        <li><strong>Длина:</strong> Минимум 12 символов, оптимально 16-20+</li>
                        <li><strong>Сложность:</strong> Комбинация букв верхнего и нижнего регистра, цифр и специальных символов</li>
                        <li><strong>Уникальность:</strong> Разные пароли для разных сервисов</li>
                        <li><strong>Непредсказуемость:</strong> Отсутствие личной информации и словарных слов</li>
                    </ul>
                    
                    <h3>Методы создания надежных паролей</h3>
                    <ol>
                        <li><strong>Парольные фразы:</strong> Используйте длинные фразы, которые легко запомнить, но трудно угадать
                        <br>Пример: "ЛошадьБатареяСкрепка42!"</li>
                        <li><strong>Метод аббревиатур:</strong> Создавайте аббревиатуры из запоминающихся фраз
                        <br>Пример: "Я каждый день просыпаюсь в 7 утра!" → "Якдпв7у!"</li>
                        <li><strong>Генераторы паролей:</strong> Используйте специальные программы для создания случайных паролей</li>
                    </ol>
                    
                    <h3>Управление паролями</h3>
                    <ul>
                        <li><strong>Менеджеры паролей:</strong> LastPass, 1Password, Bitwarden, KeePass</li>
                        <li><strong>Преимущества:</strong>
                            <ul>
                                <li>Хранение всех паролей под одним мастер-паролем</li>
                                <li>Автоматическое генерирование сложных паролей</li>
                                <li>Автозаполнение форм</li>
                                <li>Предупреждения о взломанных сайтах</li>
                            </ul>
                        </li>
                    </ul>
                    
                    <h3>Двухфакторная аутентификация (2FA)</h3>
                    <ul>
                        <li>Добавляет второй уровень защиты помимо пароля</li>
                        <li>Типы 2FA:
                            <ul>
                                <li>SMS-коды</li>
                                <li>Приложения аутентификации (Google Authenticator, Authy)</li>
                                <li>Физические ключи безопасности (YubiKey)</li>
                                <li>Биометрические данные (отпечаток пальца, распознавание лица)</li>
                            </ul>
                        </li>
                    </ul>
                    
                    <h3>Чего следует избегать</h3>
                    <ul>
                        <li>Пароли короче 12 символов</li>
                        <li>Личная информация в пароле (дата рождения, имена)</li>
                        <li>Простые замены букв цифрами (o → 0, i → 1)</li>
                        <li>Использование одного пароля на нескольких сайтах</li>
                        <li>Записывание паролей на бумаге или в незашифрованных файлах</li>
                    </ul>
                `,
                quiz: [
                    {
                        question: "Какая минимальная рекомендуемая длина пароля?",
                        options: [
                            "8 символов",
                            "10 символов",
                            "12 символов",
                            "6 символов"
                        ],
                        correctAnswer: 2
                    },
                    {
                        question: "Что НЕ рекомендуется использовать в пароле?",
                        options: [
                            "Специальные символы",
                            "Личную информацию",
                            "Комбинацию букв разного регистра",
                            "Случайные слова"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что такое менеджер паролей?",
                        options: [
                            "Приложение для автоматической смены паролей",
                            "Программа для хранения и управления паролями",
                            "Человек, ответственный за пароли в компании",
                            "Защитный код на банковской карте"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что такое двухфакторная аутентификация (2FA)?",
                        options: [
                            "Использование двух разных паролей",
                            "Дополнительный уровень защиты помимо пароля",
                            "Шифрование пароля дважды",
                            "Проверка пароля на двух устройствах"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Какой из следующих паролей наиболее надежный?",
                        options: [
                            "password123",
                            "P@ssw0rd",
                            "АвтобусЧасыКактус!75",
                            "qwerty"
                        ],
                        correctAnswer: 2
                    }
                ]
            },
            {
                id: 3,
                title: "Защита от вредоносного ПО",
                description: "Изучите методы защиты от вирусов, троянов и других вредоносных программ.",
                status: "not-started",
                content: `
                    <h2>Защита от вредоносного ПО</h2>
                    <p>Вредоносное программное обеспечение (малвэр) — это программы, созданные для нанесения вреда компьютерам, устройствам и сетям. В этом уроке вы узнаете, как защитить свои устройства.</p>
                    
                    <h3>Типы вредоносного ПО</h3>
                    <ul>
                        <li><strong>Вирусы:</strong> Саморазмножающиеся программы, заражающие другие файлы</li>
                        <li><strong>Трояны:</strong> Скрываются под видом полезного ПО</li>
                        <li><strong>Шпионское ПО (Spyware):</strong> Собирает информацию о пользователе</li>
                        <li><strong>Программы-вымогатели (Ransomware):</strong> Блокируют доступ к данным и требуют выкуп</li>
                        <li><strong>Руткиты:</strong> Скрывают присутствие вредоносного ПО в системе</li>
                        <li><strong>Кейлоггеры:</strong> Записывают нажатия клавиш для кражи паролей</li>
                        <li><strong>Криптомайнеры:</strong> Используют ресурсы компьютера для добычи криптовалюты</li>
                    </ul>
                    
                    <h3>Как происходит заражение</h3>
                    <ul>
                        <li>Загрузка файлов из непроверенных источников</li>
                        <li>Открытие вложений в подозрительных письмах</li>
                        <li>Переход по вредоносным ссылкам</li>
                        <li>Посещение зараженных сайтов</li>
                        <li>Использование взломанного ПО</li>
                        <li>Подключение зараженных USB-устройств</li>
                    </ul>
                    
                    <h3>Признаки заражения</h3>
                    <ul>
                        <li>Замедление работы устройства</li>
                        <li>Частые сбои и "синий экран смерти"</li>
                        <li>Неожиданные всплывающие окна и реклама</li>
                        <li>Изменение настроек браузера</li>
                        <li>Странная активность в сети</li>
                        <li>Недостаток свободного места</li>
                        <li>Нетипичное поведение программ</li>
                    </ul>
                    
                    <h3>Основные методы защиты</h3>
                    <ol>
                        <li><strong>Антивирусное ПО:</strong>
                            <ul>
                                <li>Установка проверенного антивируса</li>
                                <li>Регулярное обновление антивирусных баз</li>
                                <li>Проведение полного сканирования минимум раз в неделю</li>
                            </ul>
                        </li>
                        <li><strong>Обновление ПО:</strong>
                            <ul>
                                <li>Своевременное обновление операционной системы</li>
                                <li>Установка обновлений для всех программ</li>
                                <li>Включение автоматических обновлений</li>
                            </ul>
                        </li>
                        <li><strong>Безопасное поведение:</strong>
                            <ul>
                                <li>Скачивание файлов только из проверенных источников</li>
                                <li>Проверка скачанных файлов антивирусом</li>
                                <li>Осторожность при открытии вложений</li>
                                <li>Использование защищенных соединений (HTTPS)</li>
                            </ul>
                        </li>
                    </ol>
                    
                    <h3>Дополнительные меры защиты</h3>
                    <ul>
                        <li><strong>Брандмауэр (Firewall):</strong> Контролирует входящий и исходящий трафик</li>
                        <li><strong>Блокировщики рекламы:</strong> Предотвращают заражение через вредоносную рекламу</li>
                        <li><strong>Песочницы (Sandbox):</strong> Изолированные среды для тестирования подозрительных программ</li>
                        <li><strong>Регулярное резервное копирование:</strong> Защита от программ-вымогателей</li>
                    </ul>
                    
                    <h3>Действия при заражении</h3>
                    <ol>
                        <li>Отключите устройство от интернета</li>
                        <li>Запустите сканирование антивирусом в безопасном режиме</li>
                        <li>Воспользуйтесь специализированными инструментами для удаления вредоносного ПО</li>
                        <li>Восстановите систему из резервной копии при необходимости</li>
                        <li>Смените все пароли после удаления угрозы</li>
                    </ol>
                `,
                quiz: [
                    {
                        question: "Какой тип вредоносного ПО блокирует доступ к данным и требует выкуп?",
                        options: [
                            "Троян",
                            "Программа-вымогатель (Ransomware)",
                            "Кейлоггер",
                            "Руткит"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что НЕ является признаком заражения вредоносным ПО?",
                        options: [
                            "Замедление работы устройства",
                            "Всплывающие окна с рекламой",
                            "Увеличение скорости интернета",
                            "Частые сбои системы"
                        ],
                        correctAnswer: 2
                    },
                    {
                        question: "Как часто рекомендуется проводить полное антивирусное сканирование?",
                        options: [
                            "Раз в год",
                            "Раз в месяц",
                            "Минимум раз в неделю",
                            "Ежедневно"
                        ],
                        correctAnswer: 2
                    },
                    {
                        question: "Что такое Sandbox (песочница) в контексте компьютерной безопасности?",
                        options: [
                            "Вид антивирусной программы",
                            "Изолированная среда для тестирования подозрительных программ",
                            "Программа для очистки системы",
                            "Механизм шифрования данных"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Какое первое действие рекомендуется при обнаружении вредоносного ПО?",
                        options: [
                            "Перезагрузить компьютер",
                            "Отключить устройство от интернета",
                            "Установить антивирус",
                            "Удалить все файлы из папки загрузок"
                        ],
                        correctAnswer: 1
                    }
                ]
            },
            {
                id: 4,
                title: "Безопасность в социальных сетях",
                description: "Научитесь защищать свои данные в социальных сетях и мессенджерах.",
                status: "not-started",
                content: `
                    <h2>Безопасность в социальных сетях</h2>
                    <p>Социальные сети — важная часть нашей жизни, но они также представляют значительные риски для конфиденциальности и безопасности. В этом уроке вы узнаете, как защитить свои данные.</p>
                    
                    <h3>Основные угрозы в социальных сетях</h3>
                    <ul>
                        <li><strong>Кража личных данных:</strong> Извлечение и использование персональной информации</li>
                        <li><strong>Социальная инженерия:</strong> Манипуляция для получения доступа к аккаунтам</li>
                        <li><strong>Клонирование профилей:</strong> Создание фальшивых копий аккаунтов</li>
                        <li><strong>Киберсталкинг:</strong> Преследование и домогательство онлайн</li>
                        <li><strong>Таргетированные атаки:</strong> Персонализированные атаки на основе данных из профиля</li>
                        <li><strong>Распространение вредоносного ПО:</strong> Через сообщения и ссылки</li>
                    </ul>
                    
                    <h3>Настройки приватности</h3>
                    <ol>
                        <li><strong>Ограничьте доступ к профилю:</strong>
                            <ul>
                                <li>Установите просмотр профиля только для друзей</li>
                                <li>Ограничьте доступ к фотографиям и публикациям</li>
                                <li>Скройте список друзей</li>
                            </ul>
                        </li>
                        <li><strong>Управляйте данными геолокации:</strong>
                            <ul>
                                <li>Отключите автоматическое определение местоположения</li>
                                <li>Не отмечайте местоположение в реальном времени</li>
                            </ul>
                        </li>
                        <li><strong>Контролируйте тэги и упоминания:</strong>
                            <ul>
                                <li>Включите модерацию тэгов</li>
                                <li>Настройте уведомления о тэгах</li>
                            </ul>
                        </li>
                    </ol>
                    
                    <h3>Защита аккаунта</h3>
                    <ul>
                        <li><strong>Надежный пароль:</strong> Используйте уникальный сложный пароль</li>
                        <li><strong>Двухфакторная аутентификация:</strong> Включите 2FA для всех аккаунтов</li>
                        <li><strong>Контроль сессий:</strong> Регулярно проверяйте список устройств с доступом</li>
                        <li><strong>Безопасное восстановление:</strong> Настройте надежные способы восстановления</li>
                        <li><strong>Проверка приложений:</strong> Регулярно просматривайте список подключенных приложений</li>
                    </ul>
                    
                    <h3>Правила безопасного общения</h3>
                    <ul>
                        <li>Проверяйте личность собеседников перед общением</li>
                        <li>Не принимайте запросы в друзья от незнакомцев</li>
                        <li>Будьте осторожны с сообщениями, содержащими ссылки и файлы</li>
                        <li>Не делитесь личной информацией в открытых чатах</li>
                        <li>Используйте шифрованные мессенджеры для конфиденциальных разговоров</li>
                    </ul>
                    
                    <h3>Информационная гигиена</h3>
                    <ul>
                        <li><strong>Ограничьте личную информацию:</strong>
                            <ul>
                                <li>Не публикуйте полную дату рождения</li>
                                <li>Не указывайте точный адрес</li>
                                <li>Не делитесь информацией о финансах</li>
                            </ul>
                        </li>
                        <li><strong>Осторожно с фотографиями:</strong>
                            <ul>
                                <li>Не публикуйте фото документов и билетов</li>
                                <li>Скрывайте номера машин и домов</li>
                                <li>Проверяйте фон фотографий на наличие личной информации</li>
                            </ul>
                        </li>
                    </ul>
                    
                    <h3>Защита детей в социальных сетях</h3>
                    <ul>
                        <li>Настройте родительский контроль</li>
                        <li>Обсудите правила поведения в сети</li>
                        <li>Объясните риски общения с незнакомцами</li>
                        <li>Регулярно проверяйте активность ребенка</li>
                    </ul>
                    
                    <h3>Что делать в случае взлома</h3>
                    <ol>
                        <li>Восстановите доступ к аккаунту как можно скорее</li>
                        <li>Сразу смените пароль и настройте 2FA</li>
                        <li>Проверьте и отзовите доступ подозрительных приложений</li>
                        <li>Сообщите друзьям о взломе</li>
                        <li>Обратитесь в службу поддержки социальной сети</li>
                    </ol>
                `,
                quiz: [
                    {
                        question: "Что такое клонирование профиля?",
                        options: [
                            "Создание резервной копии профиля",
                            "Создание фальшивой копии аккаунта для мошенничества",
                            "Перенос данных на новый аккаунт",
                            "Метод восстановления взломанного профиля"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Какая настройка НЕ повышает безопасность в социальных сетях?",
                        options: [
                            "Двухфакторная аутентификация",
                            "Публикация точного местоположения",
                            "Модерация тэгов",
                            "Ограничение доступа к профилю"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что рекомендуется скрывать в публичном профиле?",
                        options: [
                            "Имя пользователя",
                            "Полную дату рождения и домашний адрес",
                            "Аватар профиля",
                            "Информацию о хобби"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Как защитить ребенка в социальных сетях?",
                        options: [
                            "Запретить пользоваться интернетом",
                            "Настроить родительский контроль и обсудить правила безопасности",
                            "Разрешить общаться только в групповых чатах",
                            "Ограничить доступ только к образовательным ресурсам"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Какое первое действие следует предпринять при взломе аккаунта?",
                        options: [
                            "Создать новый аккаунт",
                            "Удалить все публикации",
                            "Восстановить доступ и сменить пароль",
                            "Позвонить в полицию"
                        ],
                        correctAnswer: 2
                    }
                ]
            },
            {
                id: 5,
                title: "Безопасность мобильных устройств",
                description: "Защитите ваш смартфон и планшет от киберугроз и хищения данных.",
                status: "not-started",
                content: `
                    <h2>Безопасность мобильных устройств</h2>
                    <p>Смартфоны и планшеты содержат огромное количество личной информации и требуют особого внимания к безопасности. В этом уроке вы узнаете, как защитить свои мобильные устройства.</p>
                    
                    <h3>Основные угрозы для мобильных устройств</h3>
                    <ul>
                        <li><strong>Вредоносные приложения:</strong> Шпионское ПО, скрытое в обычных приложениях</li>
                        <li><strong>Уязвимости операционных систем:</strong> Незакрытые бреши в безопасности</li>
                        <li><strong>Небезопасные Wi-Fi сети:</strong> Перехват данных в публичных сетях</li>
                        <li><strong>Физическая кража:</strong> Похищение устройства с доступом к данным</li>
                        <li><strong>Фишинг:</strong> Атаки через SMS, мессенджеры и email</li>
                        <li><strong>Шпионские программы:</strong> Отслеживание активности и геолокации</li>
                    </ul>
                    
                    <h3>Основные меры защиты</h3>
                    <ol>
                        <li><strong>Блокировка экрана:</strong>
                            <ul>
                                <li>Используйте надежные методы блокировки (PIN-код, пароль, отпечаток пальца, распознавание лица)</li>
                                <li>Настройте автоматическую блокировку через короткий промежуток времени</li>
                                <li>Избегайте простых графических ключей и PIN-кодов</li>
                            </ul>
                        </li>
                        <li><strong>Управление приложениями:</strong>
                            <ul>
                                <li>Устанавливайте приложения только из официальных магазинов</li>
                                <li>Проверяйте разрешения перед установкой</li>
                                <li>Регулярно удаляйте неиспользуемые приложения</li>
                                <li>Следите за обновлениями приложений</li>
                            </ul>
                        </li>
                        <li><strong>Обновления системы:</strong>
                            <ul>
                                <li>Своевременно устанавливайте обновления безопасности</li>
                                <li>Включите автоматические обновления</li>
                                <li>Используйте поддерживаемые версии ОС</li>
                            </ul>
                        </li>
                    </ol>
                    
                    <h3>Защита данных</h3>
                    <ul>
                        <li><strong>Шифрование:</strong>
                            <ul>
                                <li>Включите полное шифрование устройства</li>
                                <li>Используйте зашифрованные мессенджеры для общения</li>
                                <li>Защищайте важные документы и фотографии паролем</li>
                            </ul>
                        </li>
                        <li><strong>Резервное копирование:</strong>
                            <ul>
                                <li>Регулярно создавайте резервные копии данных</li>
                                <li>Используйте защищенные облачные хранилища</li>
                                <li>Шифруйте резервные копии</li>
                            </ul>
                        </li>
                        <li><strong>Удаленное управление:</strong>
                            <ul>
                                <li>Настройте функцию поиска устройства</li>
                                <li>Активируйте возможность удаленной блокировки и стирания</li>
                                <li>Проверьте работу этих функций заранее</li>
                            </ul>
                        </li>
                    </ul>
                    
                    <h3>Безопасная работа с сетями</h3>
                    <ul>
                        <li><strong>Wi-Fi безопасность:</strong>
                            <ul>
                                <li>Избегайте подключения к открытым сетям</li>
                                <li>Используйте VPN при подключении к публичным Wi-Fi</li>
                                <li>Отключайте Wi-Fi, когда не используете его</li>
                            </ul>
                        </li>
                        <li><strong>Bluetooth:</strong>
                            <ul>
                                <li>Выключайте Bluetooth, когда не используете его</li>
                                <li>Установите режим "невидимый" для других устройств</li>
                                <li>Подтверждайте подключения только от известных устройств</li>
                            </ul>
                        </li>
                        <li><strong>Мобильный интернет:</strong>
                            <ul>
                                <li>Следите за трафиком и аномальной активностью</li>
                                <li>Используйте защищенные соединения (HTTPS)</li>
                            </ul>
                        </li>
                    </ul>
                    
                    <h3>Дополнительные рекомендации</h3>
                    <ul>
                        <li>Установите мобильный антивирус от надежного производителя</li>
                        <li>Используйте менеджер паролей для хранения учетных данных</li>
                        <li>Включите двухфакторную аутентификацию для всех важных сервисов</li>
                        <li>Не оставляйте устройство без присмотра в общественных местах</li>
                        <li>Регулярно проверяйте активность аккаунтов и устройств</li>
                    </ul>
                    
                    <h3>Что делать при потере или краже устройства</h3>
                    <ol>
                        <li>Немедленно воспользуйтесь функцией поиска устройства</li>
                        <li>Удаленно заблокируйте устройство</li>
                        <li>Смените пароли важных аккаунтов</li>
                        <li>Свяжитесь с оператором для блокировки SIM-карты</li>
                        <li>При необходимости удаленно сотрите данные</li>
                        <li>Сообщите о краже в полицию</li>
                    </ol>
                `,
                quiz: [
                    {
                        question: "Какой метод блокировки экрана наименее безопасен?",
                        options: [
                            "Сложный пароль",
                            "Простой графический ключ",
                            "Отпечаток пальца",
                            "Распознавание лица"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Что следует делать при подключении к публичному Wi-Fi?",
                        options: [
                            "Отключить антивирус для экономии батареи",
                            "Использовать VPN для защиты соединения",
                            "Разрешить автоматическое подключение к другим сетям",
                            "Выполнить вход в банковские приложения"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Зачем нужно регулярно обновлять операционную систему мобильного устройства?",
                        options: [
                            "Для получения новых функций",
                            "Для устранения уязвимостей безопасности",
                            "Для увеличения объема памяти",
                            "Для улучшения качества фотографий"
                        ],
                        correctAnswer: 2
                    },
                    {
                        question: "Какую функцию следует настроить заблаговременно на случай кражи устройства?",
                        options: [
                            "Автоматическую отправку фотографий в облако",
                            "Удаленную блокировку и стирание данных",
                            "Автоматический перевод на громкую связь",
                            "Функцию автоматического резервного копирования"
                        ],
                        correctAnswer: 1
                    },
                    {
                        question: "Из каких источников безопаснее всего устанавливать мобильные приложения?",
                        options: [
                            "С сайтов разработчиков",
                            "Из официальных магазинов приложений",
                            "От друзей через Bluetooth",
                            "Из альтернативных магазинов с бесплатными версиями"
                        ],
                        correctAnswer: 1
                    }
                ]
            }
        ]
    },
    achievements: [
        { id: 'first_lesson', title: 'Первый шаг', description: 'Завершите первый урок', icon: '🏆', condition: (progress) => Object.values(progress).some(p => p.completed) },
        { id: 'perfect_quiz', title: 'Гений теста', description: '100% на тесте', icon: '🎓', condition: (progress) => Object.values(progress).some(p => p.quizScore === 100) },
        { id: 'streak_3', title: 'Серия 3 дня', description: 'Учитесь 3 дня подряд', icon: '🔥', condition: (stats) => stats.streak >= 3 },
        { id: 'all_lessons', title: 'Мастер курса', description: 'Завершите все уроки', icon: '🏅', condition: (progress) => Object.values(progress).filter(p => p.completed).length >= 5 },
        { id: 'streak_7', title: 'Стабильный прогресс', description: 'Учитесь 7 дней подряд', icon: '⚡', condition: (stats) => stats.streak >= 7 },
        { id: 'night_owl', title: 'Ночная сова', description: 'Завершите урок после 23:00', icon: '🦉', condition: (activity) => activity.some(a => a.completed && new Date(a.timestamp).getHours() >= 23) },
        { id: 'early_bird', title: 'Ранняя пташка', description: 'Завершите урок до 7:00', icon: '🐦', condition: (activity) => activity.some(a => a.completed && new Date(a.timestamp).getHours() < 7) },
        { id: 'weekend_warrior', title: 'Воин выходных', description: 'Учитесь в выходные', icon: '🛡️', condition: (activity) => activity.some(a => {
            const day = new Date(a.timestamp).getDay();
            return a.completed && (day === 0 || day === 6);
        }) },
        {
            id: 'security_expert',
            title: 'Эксперт по безопасности',
            description: 'Наберите более 90% на всех тестах',
            icon: '🔐',
            condition: (progress) => {
                const completedLessons = Object.values(progress).filter(p => p.completed);
                return completedLessons.length === 5 && completedLessons.every(p => p.quizScore >= 90);
            }
        }
    ],
    badges: [
        { id: 'novice', title: 'Новичок', description: 'Завершите 1 урок', icon: '🥉', condition: (progress) => Object.values(progress).filter(p => p.completed).length >= 1, points: 50 },
        { id: 'scholar', title: 'Ученый', description: 'Наберите 100 очков', icon: '🥈', condition: (stats) => stats.points >= 100, points: 100 },
        { id: 'security_enthusiast', title: 'Энтузиаст безопасности', description: 'Завершите 3 урока', icon: '🥇', condition: (progress) => Object.values(progress).filter(p => p.completed).length >= 3, points: 200 },
        { id: 'quiz_master', title: 'Мастер тестов', description: 'Получите 90%+ на 3 тестах', icon: '📝', condition: (progress) => Object.values(progress).filter(p => p.quizScore >= 90).length >= 3, points: 150 },
        {
            id: 'security_champion',
            title: 'Чемпион безопасности',
            description: 'Завершите весь курс со средним баллом 95%+',
            icon: '🛡️',
            condition: (progress) => {
                const completed = Object.values(progress).filter(p => p.completed);
                if (completed.length !== 5) return false; // Проверяем, что завершены ВСЕ уроки
                const avgScore = completed.reduce((sum, p) => sum + p.quizScore, 0) / completed.length;
                return avgScore >= 95;
            },
            points: 500
        },
        { id: 'dedicated_learner', title: 'Преданный ученик', description: 'Учитесь 10 дней подряд', icon: '📚', condition: (stats) => stats.streak >= 10, points: 300 },
        { id: 'sharing_is_caring', title: 'Делиться - значит заботиться', description: 'Поделитесь курсом с друзьями', icon: '🤝', condition: (actions) => actions.includes('shared_course'), points: 100 },
        { id: 'feedback_provider', title: 'Даете обратную связь', description: 'Оставьте отзыв о курсе', icon: '💬', condition: (actions) => actions.includes('provided_feedback'), points: 75 }
    ],
    leaderboard: [
    ],
    dailyTips: [
        "Регулярно обновляйте пароли для всех важных аккаунтов.",
        "Используйте разные пароли для разных сервисов.",
        "Проверяйте URL сайта перед вводом данных.",
        "Включите двухфакторную аутентификацию везде, где это возможно.",
        "Не открывайте вложения от незнакомых отправителей.",
        "Регулярно обновляйте операционную систему и приложения.",
        "Используйте VPN при подключении к публичным Wi-Fi сетям.",
        "Проверяйте разрешения приложений перед их установкой.",
        "Блокируйте экран устройства, даже если отходите на минуту.",
        "Создавайте резервные копии важных данных."
    ],
    securityResources: [
        {
            title: "Национальный координационный центр по компьютерным инцидентам",
            url: "https://cert.gov.ru/",
            description: "Официальный ресурс по компьютерной безопасности в России"
        },
        {
            title: "Лаборатория Касперского - Блог",
            url: "https://www.kaspersky.ru/blog/",
            description: "Актуальные новости и советы по кибербезопасности"
        },
        {
            title: "SecurityLab",
            url: "https://www.securitylab.ru/",
            description: "Новости и аналитика в сфере информационной безопасности"
        },
        {
            title: "Хабр - Информационная безопасность",
            url: "https://habr.com/ru/hub/infosecurity/",
            description: "Сообщество специалистов по информационной безопасности"
        },
        {
            title: "Have I Been Pwned",
            url: "https://haveibeenpwned.com/",
            description: "Проверка утечек данных по email"
        }
    ],
    practicalExercises: [
        {
            id: 1,
            title: "Проверка надежности пароля",
            description: "Научитесь оценивать безопасность ваших паролей",
            steps: [
                "Зайдите на сервис проверки надежности паролей",
                "Введите различные комбинации (не используйте реальные пароли)",
                "Оцените время взлома для каждого варианта",
                "Составьте новый надежный пароль на основе полученных знаний"
            ]
        },
        {
            id: 2,
            title: "Настройка двухфакторной аутентификации",
            description: "Защитите свои аккаунты дополнительным уровнем защиты",
            steps: [
                "Выберите важный аккаунт (email, социальная сеть)",
                "Найдите раздел настроек безопасности",
                "Включите двухфакторную аутентификацию",
                "Настройте резервные коды доступа",
                "Протестируйте процесс входа с новой защитой"
            ]
        },
        {
            id: 3,
            title: "Распознавание фишинговых писем",
            description: "Тренируйтесь выявлять опасные электронные письма",
            steps: [
                "Изучите примеры фишинговых писем в интернете",
                "Составьте список признаков фишинга",
                "Проверьте свою почту на подозрительные письма",
                "Создайте отдельную папку для сомнительных сообщений"
            ]
        }
    ],
    challenges: [
        {
            id: 1,
            title: "Недельный аудит безопасности",
            description: "Проведите полный аудит вашей цифровой безопасности",
            tasks: [
                "Проверьте надежность всех паролей",
                "Включите 2FA на всех важных аккаунтах",
                "Обновите ПО на всех устройствах",
                "Проверьте настройки приватности в соцсетях",
                "Удалите неиспользуемые приложения и аккаунты"
            ],
            reward: {
                points: 200,
                badge: "security_auditor"
            }
        },
        {
            id: 2,
            title: "Создание системы резервного копирования",
            description: "Разработайте и внедрите стратегию резервного копирования",
            tasks: [
                "Определите критически важные данные",
                "Выберите методы резервного копирования (облако, внешние носители)",
                "Настройте автоматическое резервное копирование",
                "Протестируйте восстановление из резервной копии",
                "Создайте расписание регулярных проверок"
            ],
            reward: {
                points: 150,
                badge: "backup_master"
            }
        }
    ]
};

/** DOM Module */
const DOM = {
    elements: {
        lessonsContainer: document.getElementById('lessons-container'),
        lessonPage: document.getElementById('lesson-page'),
        homePage: document.getElementById('home-page'),
        achievementsPage: document.getElementById('achievements-page'),
        profilePage: document.getElementById('profile-page'),
        lessonContent: document.getElementById('lesson-content'),
        quizContainer: document.getElementById('quiz-container'),
        quizQuestions: document.getElementById('quiz-questions'),
        backBtn: document.getElementById('back-btn'),
        nextBtn: document.getElementById('next-btn'),
        submitQuizBtn: document.getElementById('submit-quiz'),
        quizResult: document.getElementById('quiz-result'),
        startLearningBtn: document.getElementById('start-learning-btn'),
        continueLearningBtn: document.getElementById('continue-learning-btn'),
        progressCircleFill: document.getElementById('progress-circle-fill'),
        progressText: document.getElementById('progress-text'),
        completedLessons: document.getElementById('completed-lessons'),
        userPoints: document.getElementById('user-points'),
        userStreak: document.getElementById('user-streak'),
        achievementsContainer: document.getElementById('achievements-container'),
        badgesContainer: document.getElementById('badges-container'),
        pointsText: document.getElementById('points-text'),
        dailyGoalText: document.getElementById('daily-goal-text'),
        streakCount: document.getElementById('streak-count'),
        homeLink: document.getElementById('home-link'),
        achievementsLink: document.getElementById('achievements-link'),
        profileLink: document.getElementById('profile-link'),
        shareAchievements: document.getElementById('share-achievements'),
        leaderboardContainer: document.getElementById('leaderboard-container'),
        userAvatar: document.getElementById('user-avatar'),
        changeAvatarBtn: document.getElementById('change-avatar-btn'),
        userNameInput: document.getElementById('user-name-input'),
        userPointsProfile: document.getElementById('user-points-profile'),
        userStreakProfile: document.getElementById('user-streak-profile'),
        saveProfileBtn: document.getElementById('save-profile-btn'),
        themeToggle: document.getElementById('theme-toggle'),
        contrastToggle: document.getElementById('contrast-toggle'),
        hamburger: document.getElementById('hamburger'),
        navMenu: document.getElementById('nav-menu'),
        navOverlay: document.getElementById('nav-overlay'),
        lessonPreviewModal: document.getElementById('lesson-preview-modal'),
        previewTitle: document.getElementById('preview-title'),
        previewDescription: document.getElementById('preview-description'),
        startLessonBtn: document.getElementById('start-lesson-btn'),
        closeModalBtn: document.getElementById('close-modal-btn'),
        toastContainer: document.getElementById('toast-container'),
        lessonLoading: document.getElementById('lesson-loading')
    }
};

/** State Module */
const State = {
    currentLessonId: null,
    userProgress: loadProgress(),
    userStats: loadStats(),
    userProfile: loadProfile(),
    isSoundEnabled: true,
    isMenuOpen: false
};

/** Utility Module */
const Utils = {
    sanitizeInput(input) {
        const div = document.createElement('div');
        div.textContent = input;
        return div.innerHTML;
    },
    validateUrl(url) {
        try {
            new URL(url);
            return true;
        } catch {
            return false;
        }
    },
    debounce(fn, ms) {
        let timeout;
        return (...args) => {
            clearTimeout(timeout);
            timeout = setTimeout(() => fn(...args), ms);
        };
    },
    animateProgressCircle(percentage) {
        const circle = DOM.elements.progressCircleFill;
        const circumference = 2 * Math.PI * 45;
        circle.style.strokeDasharray = `${circumference} ${circumference}`;
        circle.style.strokeDashoffset = circumference - (percentage / 100) * circumference;
    },
    closeMenu() {
        State.isMenuOpen = false;
        DOM.elements.navMenu.classList.remove('active');
        DOM.elements.hamburger.classList.remove('active');
        DOM.elements.hamburger.setAttribute('aria-expanded', 'false');
        DOM.elements.navMenu.setAttribute('aria-hidden', 'true');
        DOM.elements.navOverlay.classList.remove('active');
        document.body.style.overflow = '';
    }
};

/** Storage Module */
function loadProgress() {
    try {
        const saved = localStorage.getItem('userProgress');
        if (saved) return JSON.parse(saved);
    } catch (error) {
        console.error('Error loading progress:', error);
        UI.showToast('Ошибка загрузки прогресса. Данные могут быть недоступны.', '❌');
    }
    const progress = {};
    Data.course.lessons.forEach(lesson => {
        progress[lesson.id] = { status: 'not-started', completed: false, quizCompleted: false, quizScore: 0 };
    });
    return progress;
}

function loadStats() {
    try {
        const saved = localStorage.getItem('userStats');
        if (saved) return JSON.parse(saved);
        return { points: 0, streak: 0, lastActiveDate: null, achievements: [], badges: [] };
    } catch (error) {
        console.error('Error loading stats:', error);
        return { points: 0, streak: 0, lastActiveDate: null, achievements: [], badges: [] };
    }
}

function loadProfile() {
    try {
        const saved = localStorage.getItem('userProfile');
        if (saved) return JSON.parse(saved);
        return { name: 'Пользователь', avatar: 'https://ui-avatars.com/api/?name=Пользователь' };
    } catch (error) {
        console.error('Error loading profile:', error);
        return { name: 'Пользователь', avatar: 'https://ui-avatars.com/api/?name=Пользователь' };
    }
}

function saveProgress() {
    try {
        localStorage.setItem('userProgress', JSON.stringify(State.userProgress));
        UI.updateProgressDisplay();
        UI.checkAchievements();
        UI.checkBadges();
    } catch (error) {
        console.error('Error saving progress:', error);
        UI.showToast('Ошибка сохранения прогресса', '❌');
    }
}

function saveStats() {
    try {
        localStorage.setItem('userStats', JSON.stringify(State.userStats));
        UI.updateStatsDisplay();
    } catch (error) {
        console.error('Error saving stats:', error);
    }
}

function saveProfile() {
    try {
        localStorage.setItem('userProfile', JSON.stringify(State.userProfile));
        UI.updateProfileDisplay();
    } catch (error) {
        console.error('Error saving profile:', error);
    }
}

/** UI Module */
const UI = {
    updateProgressDisplay() {
        const totalLessons = Data.course.lessons.length;
        const completedLessons = Data.course.lessons.filter(lesson => State.userProgress[lesson.id]?.completed).length;
        const progressPercentage = totalLessons > 0 ? Math.floor((completedLessons / totalLessons) * 100) : 0;

        Utils.animateProgressCircle(progressPercentage);
        DOM.elements.progressText.textContent = `${progressPercentage}%`;
        DOM.elements.completedLessons.textContent = completedLessons;
        DOM.elements.userPoints.textContent = State.userStats.points;
        DOM.elements.userStreak.textContent = `${State.userStats.streak} дней`;
    },
    updateStatsDisplay() {
        DOM.elements.pointsText.textContent = `Очки: ${State.userStats.points} 🏆`;
        DOM.elements.streakCount.textContent = `Серия: ${State.userStats.streak} дней 🔥`;
        const today = new Date().toISOString().split('T')[0];
        DOM.elements.dailyGoalText.textContent = State.userStats.lastActiveDate === today
            ? 'Цель выполнена! 🎉'
            : 'Пройдите 1 урок для серии!';
    },
    updateProfileDisplay() {
        DOM.elements.userNameInput.value = State.userProfile.name;
        DOM.elements.userAvatar.src = State.userProfile.avatar;
        DOM.elements.userPointsProfile.textContent = State.userStats.points;
        DOM.elements.userStreakProfile.textContent = `${State.userStats.streak} дней`;
    },
    updateStreak() {
        const today = new Date().toISOString().split('T')[0];
        const yesterday = new Date(new Date().setDate(new Date().getDate() - 1)).toISOString().split('T')[0];

        if (State.userStats.lastActiveDate !== today) {
            State.userStats.streak = State.userStats.lastActiveDate === yesterday
                ? State.userStats.streak + 1
                : 1;
            State.userStats.lastActiveDate = today;
            saveStats();
            UI.checkAchievements();
        }
    },
    renderLessons() {
        DOM.elements.lessonsContainer.innerHTML = '';
        Data.course.lessons.forEach(lesson => {
            const progress = State.userProgress[lesson.id] || { status: 'not-started' };
            const lessonCard = document.createElement('div');
            lessonCard.className = 'lesson-card';
            lessonCard.setAttribute('role', 'listitem');

            const status = progress.completed ? { class: 'completed', text: 'Завершен' }
                : progress.status === 'in-progress' ? { class: 'in-progress', text: 'В процессе' }
                : { class: 'not-started', text: 'Не начат' };

            lessonCard.innerHTML = `
                <div class="status ${status.class}">${status.text}</div>
                <h3>${lesson.title}</h3>
                <p>${lesson.description}</p>
                <button class="btn" data-lesson-id="${lesson.id}" aria-label="Предпросмотр урока ${lesson.title}">Предпросмотр</button>
            `;

            lessonCard.querySelector('button').addEventListener('click', () => UI.showLessonPreview(lesson.id));
            DOM.elements.lessonsContainer.appendChild(lessonCard);
        });
    },
    renderAchievements() {
        DOM.elements.achievementsContainer.innerHTML = '';
        Data.achievements.forEach(achievement => {
            const isUnlocked = State.userStats.achievements.includes(achievement.id);
            const card = document.createElement('div');
            card.className = `achievement-card ${isUnlocked ? 'unlocked' : 'locked'}`;
            card.setAttribute('role', 'listitem');
            card.innerHTML = `
                <div class="achievement-icon">${achievement.icon}</div>
                <h4>${achievement.title}</h4>
                <p>${achievement.description}</p>
            `;
            DOM.elements.achievementsContainer.appendChild(card);
        });
    },
    renderBadges() {
        DOM.elements.badgesContainer.innerHTML = '';
        Data.badges.forEach(badge => {
            const isUnlocked = State.userStats.badges.includes(badge.id);
            const card = document.createElement('div');
            card.className = `badge-card ${isUnlocked ? 'unlocked' : 'locked'}`;
            card.setAttribute('role', 'listitem');
            card.innerHTML = `
                <div class="badge-icon">${badge.icon}</div>
                <h4>${badge.title}</h4>
                <p>${badge.description}</p>
            `;
            DOM.elements.badgesContainer.appendChild(card);
        });
    },
    renderLeaderboard() {
        DOM.elements.leaderboardContainer.innerHTML = '';
        if (Data.leaderboard.length === 0) {
            const emptyMessage = document.createElement('div');
            emptyMessage.className = 'leaderboard-empty';
            emptyMessage.textContent = 'Таблица лидеров пока пуста. Завершайте уроки, чтобы попасть сюда!';
            DOM.elements.leaderboardContainer.appendChild(emptyMessage);
            return;
        }
        Data.leaderboard.forEach((user, index) => {
            const item = document.createElement('div');
            item.className = 'leaderboard-item';
            item.setAttribute('role', 'listitem');
            item.innerHTML = `
                <span class="position">${index + 1}</span>
                <img src="${user.avatar}" alt="Аватар ${user.name}" loading="lazy" width="40" height="40">
                <div>
                    <h4>${user.name}</h4>
                    <p>${user.points} очков</p>
                </div>
            `;
            DOM.elements.leaderboardContainer.appendChild(item);
        });
    },
    renderQuiz(lessonId) {
        const lesson = Data.course.lessons.find(l => l.id === lessonId);
        if (!lesson || !lesson.quiz) return;

        DOM.elements.quizQuestions.innerHTML = '';
        lesson.quiz.forEach((q, index) => {
            const questionDiv = document.createElement('div');
            questionDiv.className = 'quiz-question';
            questionDiv.setAttribute('role', 'listitem');

            const optionsHtml = q.options.map((option, optIndex) => `
                <label class="quiz-option">
                    <input type="radio" name="question-${index}" value="${optIndex}" aria-label="${option}" required /> ${option}
                </label>
            `).join('');

            questionDiv.innerHTML = `
                <h4>${index + 1}. ${q.question}</h4>
                <div class="quiz-options">${optionsHtml}</div>
            `;
            DOM.elements.quizQuestions.appendChild(questionDiv);
        });

        DOM.elements.quizResult.style.display = 'none';
        DOM.elements.quizResult.className = 'result-container';
        DOM.elements.quizResult.textContent = '';
        DOM.elements.submitQuizBtn.onclick = () => UI.checkQuiz(lessonId);
    },
    showLessonPreview(lessonId) {
        Utils.closeMenu();
        const lesson = Data.course.lessons.find(l => l.id === lessonId);
        if (!lesson) return;

        DOM.elements.previewTitle.textContent = lesson.title;
        DOM.elements.previewDescription.textContent = lesson.description;
        DOM.elements.lessonPreviewModal.style.display = 'flex';
        DOM.elements.lessonPreviewModal.focus();
        DOM.elements.startLessonBtn.onclick = () => {
            DOM.elements.lessonPreviewModal.style.display = 'none';
            UI.openLesson(lessonId);
        };
    },
    openLesson(lessonId) {
        Utils.closeMenu();
        State.currentLessonId = lessonId;
        const lesson = Data.course.lessons.find(l => l.id === lessonId);
        if (!lesson) return;

        if (!State.userProgress[lessonId] || State.userProgress[lessonId].status === 'not-started') {
            State.userProgress[lessonId] = { status: 'in-progress', completed: false, quizCompleted: false, quizScore: 0 };
            UI.updateStreak();
            saveProgress();
        }

        DOM.elements.lessonLoading.style.display = 'block';
        DOM.elements.lessonContent.style.display = 'none';
        DOM.elements.quizContainer.style.display = 'none';

        setTimeout(() => {
            DOM.elements.lessonContent.innerHTML = lesson.content;
            DOM.elements.lessonContent.style.display = 'block';
            DOM.elements.lessonLoading.style.display = 'none';
            UI.showPage('lesson');
        }, 500);

        DOM.elements.nextBtn.textContent = 'Далее: Тест';
        DOM.elements.nextBtn.style.display = 'block';
        DOM.elements.nextBtn.onclick = () => {
            DOM.elements.lessonContent.style.display = 'none';
            UI.renderQuiz(lessonId);
            DOM.elements.quizContainer.style.display = 'block';
            DOM.elements.nextBtn.style.display = 'none';
        };
    },
    checkQuiz(lessonId) {
        const lesson = Data.course.lessons.find(l => l.id === lessonId);
        if (!lesson || !lesson.quiz) return;

        let correctAnswers = 0;
        const totalQuestions = lesson.quiz.length;
        let allAnswered = true;

        lesson.quiz.forEach((q, index) => {
            const selected = document.querySelector(`input[name="question-${index}"]:checked`);
            if (!selected) allAnswered = false;
            if (selected && parseInt(selected.value) === q.correctAnswer) correctAnswers++;
        });

        if (!allAnswered) {
            DOM.elements.quizResult.className = 'result-container error';
            DOM.elements.quizResult.textContent = 'Пожалуйста, ответьте на все вопросы!';
            DOM.elements.quizResult.style.display = 'block';
            return;
        }

        const score = Math.round((correctAnswers / totalQuestions) * 100);
        State.userProgress[lessonId].quizCompleted = true;
        State.userProgress[lessonId].quizScore = score;

        if (score >= 70) {
            State.userProgress[lessonId].completed = true;
            State.userStats.points += 50;
            DOM.elements.quizResult.className = 'result-container success';
            DOM.elements.quizResult.textContent = `Поздравляем! ${correctAnswers}/${totalQuestions} (${score}%). Урок завершен!`;
            UI.triggerConfetti();
            if (State.isSoundEnabled) UI.playSuccessSound();
            saveProgress();
            saveStats();
            Analytics.trackEvent('quiz_completed', { lessonId, score });
        } else {
            DOM.elements.quizResult.className = 'result-container error';
            DOM.elements.quizResult.textContent = `${correctAnswers}/${totalQuestions} (${score}%). Нужно 70%+. Попробуйте снова!`;
        }

        DOM.elements.quizResult.style.display = 'block';
        DOM.elements.nextBtn.style.display = 'none';
    },
    checkAchievements() {
        Data.achievements.forEach(achievement => {
            if (!State.userStats.achievements.includes(achievement.id) && achievement.condition(State.userProgress, State.userStats)) {
                State.userStats.achievements.push(achievement.id);
                UI.showToast(`Достижение: ${achievement.title}!`, achievement.icon);
                UI.triggerConfetti();
                saveStats();
            }
        });
    },
    checkBadges() {
        Data.badges.forEach(badge => {
            if (!State.userStats.badges.includes(badge.id) && badge.condition(State.userProgress, State.userStats)) {
                State.userStats.badges.push(badge.id);
                State.userStats.points += badge.points;
                UI.showToast(`Награда: ${badge.title}!`, badge.icon);
                UI.triggerConfetti();
                saveStats();
            }
        });
    },
    showToast(message, icon) {
        const toast = document.createElement('div');
        toast.className = 'toast success';
        toast.innerHTML = `<span class="icon">${icon}</span><p>${message}</p>`;
        DOM.elements.toastContainer.appendChild(toast);
        toast.style.opacity = '0';
        setTimeout(() => {
            toast.style.opacity = '1';
            toast.style.transition = 'opacity 0.3s';
        }, 10); // Небольшая задержка для начала анимации
        setTimeout(() => {
            toast.style.opacity = '0';
            setTimeout(() => toast.remove(), 300);
        }, 4000);
    },
    triggerConfetti() {
        confetti({
            particleCount: 100,
            spread: 70,
            origin: { y: 0.6 },
            disableForReducedMotion: true
        });
    },
    playSuccessSound() {
        const audio = new Audio('https://www.soundjay.com/buttons/sounds/button-09.mp3');
        audio.play().catch(error => console.error('Error playing sound:', error));
    },
    showPage(page) {
        Utils.closeMenu();
        DOM.elements.homePage.style.display = page === 'home' ? 'block' : 'none';
        DOM.elements.lessonPage.style.display = page === 'lesson' ? 'block' : 'none';
        DOM.elements.achievementsPage.style.display = page === 'achievements' ? 'block' : 'none';
        DOM.elements.profilePage.style.display = page === 'profile' ? 'block' : 'none';
        document.querySelectorAll('.nav-link').forEach(link => link.removeAttribute('aria-current'));
        DOM.elements[`${page}-link`]?.setAttribute('aria-current', 'page');
    },
    toggleTheme() {
        document.body.classList.toggle('dark-mode');
        const isDark = document.body.classList.contains('dark-mode');
        DOM.elements.themeToggle.textContent = isDark ? '☀️' : '🌙';
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
    },
    toggleContrast() {
        document.body.classList.toggle('high-contrast');
        const isHighContrast = document.body.classList.contains('high-contrast');
        localStorage.setItem('contrast', isHighContrast ? 'high' : 'normal');
    },
    toggleMenu() {
        State.isMenuOpen = !State.isMenuOpen;
        DOM.elements.navMenu.classList.toggle('active', State.isMenuOpen);
        DOM.elements.hamburger.classList.toggle('active', State.isMenuOpen);
        DOM.elements.hamburger.setAttribute('aria-expanded', State.isMenuOpen);
        DOM.elements.navMenu.setAttribute('aria-hidden', !State.isMenuOpen);
        DOM.elements.navOverlay.classList.toggle('active', State.isMenuOpen);
        document.body.style.overflow = State.isMenuOpen ? 'hidden' : '';
        Analytics.trackEvent('hamburger_clicked', { isExpanded: State.isMenuOpen });
        if (State.isMenuOpen) {
            DOM.elements.navMenu.focus();
        } else {
            DOM.elements.hamburger.focus();
        }
    }
};

/** Analytics Module */
const Analytics = {
    trackEvent(eventName, data) {
        console.log('Analytics:', { eventName, ...data });
        fetch('/api/track', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ eventName, ...data })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
        })
        .catch(error => {
            console.error('Analytics error:', error);
            // Показывать тост только при повторяющихся ошибках, чтобы не спамить пользователя
            UI.showToast('Ошибка отправки аналитики. Пожалуйста, проверьте соединение.', '❌');
        });
    }
};

/** Initialization */
function init() {
    try {
        UI.renderLessons();
        UI.renderAchievements();
        UI.renderBadges();
        UI.renderLeaderboard();
        UI.updateProgressDisplay();
        UI.updateStatsDisplay();
        UI.updateProfileDisplay();

        if (localStorage.getItem('theme') === 'dark') UI.toggleTheme();
        if (localStorage.getItem('contrast') === 'high') UI.toggleContrast();

        DOM.elements.backBtn.addEventListener('click', () => UI.showPage('home'));
        DOM.elements.startLearningBtn.addEventListener('click', (e) => {
            e.preventDefault();
            if (Data.course.lessons.length > 0) UI.showLessonPreview(Data.course.lessons[0].id);
            Analytics.trackEvent('start_learning_clicked');
        });
        DOM.elements.continueLearningBtn.addEventListener('click', (e) => {
            e.preventDefault();
            const nextLesson = Data.course.lessons.find(lesson => !State.userProgress[lesson.id]?.completed);
            if (nextLesson) UI.showLessonPreview(nextLesson.id);
            Analytics.trackEvent('continue_learning_clicked');
        });
        DOM.elements.homeLink.addEventListener('click', (e) => {
            e.preventDefault();
            UI.showPage('home');
            Analytics.trackEvent('nav_home_clicked');
        });
        DOM.elements.achievementsLink.addEventListener('click', (e) => {
            e.preventDefault();
            UI.showPage('achievements');
            Analytics.trackEvent('nav_achievements_clicked');
        });
        DOM.elements.profileLink.addEventListener('click', (e) => {
            e.preventDefault();
            UI.showPage('profile');
            Analytics.trackEvent('nav_profile_clicked');
        });
        DOM.elements.changeAvatarBtn.addEventListener('click', () => {
            const newAvatar = prompt('Введите URL аватара:', State.userProfile.avatar);
            if (!newAvatar || !Utils.validateUrl(newAvatar)) {
                if (newAvatar) UI.showToast('Неверный URL аватара!', '❌');
                return;
            }
        
            const img = new Image();
            img.onload = () => {
                State.userProfile.avatar = newAvatar;
                saveProfile();
                Analytics.trackEvent('avatar_changed');
                UI.showToast('Аватар успешно обновлен!', '✅');
            };
            img.onerror = () => {
                UI.showToast('Не удалось загрузить изображение!', '❌');
            };
            img.src = newAvatar;
        });
        DOM.elements.saveProfileBtn.addEventListener('click', () => {
            const newName = Utils.sanitizeInput(DOM.elements.userNameInput.value.trim());
            if (newName && newName.length <= 20) {
                State.userProfile.name = newName || 'Пользователь';
                State.userProfile.avatar = `https://ui-avatars.com/api/?name=${encodeURIComponent(newName)}`;
                saveProfile();
                UI.showToast('Профиль сохранен!', '✅');
                Analytics.trackEvent('profile_saved');
            } else {
                UI.showToast('Имя слишком длинное или пустое!', '❌');
            }
        });
        DOM.elements.themeToggle.addEventListener('click', UI.toggleTheme);
        DOM.elements.contrastToggle.addEventListener('click', UI.toggleContrast);
        DOM.elements.hamburger.addEventListener('click', UI.toggleMenu);
        DOM.elements.navOverlay.addEventListener('click', Utils.closeMenu);
        DOM.elements.navMenu.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', () => Utils.closeMenu());
        });
        DOM.elements.closeModalBtn.addEventListener('click', () => {
            DOM.elements.lessonPreviewModal.style.display = 'none';
        });
        DOM.elements.shareAchievements.addEventListener('click', () => {
            const text = `Я набрал ${State.userStats.points} очков в обучении кибербезопасности! 🚀`;
            if (navigator.share) {
                navigator.share({ title: 'Мои достижения', text, url: window.location.href })
                    .catch(error => console.error('Share error:', error));
            } else {
                prompt('Скопируйте текст для публикации:', text);
            }
            Analytics.trackEvent('achievements_shared');
        });

        DOM.elements.lessonPreviewModal.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') DOM.elements.lessonPreviewModal.style.display = 'none';
        });

        window.addEventListener('resize', () => {
            if (window.innerWidth > 768 && State.isMenuOpen) {
                Utils.closeMenu();
            }
        });

        DOM.elements.userNameInput.addEventListener('input', Utils.debounce(() => {
            const newName = DOM.elements.userNameInput.value.trim();
           

 if (newName.length > 20) {
                UI.showToast('Имя не должно превышать 20 символов!', '❌');
            }
        }, 500));

        DOM.elements.navMenu.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && State.isMenuOpen) {
                Utils.closeMenu();
            }
        });
    } catch (error) {
        console.error('Initialization error:', error);
        UI.showToast('Ошибка загрузки. Попробуйте позже.', '❌');
    }
}

init();
